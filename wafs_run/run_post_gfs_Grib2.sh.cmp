#!/bin/sh

#BSUB -oo out.post.gfs.Grib2
#BSUB -eo err.post.gfs.Grib2
#BSUB -n 16
#BSUB -J gfsposttest
#BSUB -W 00:20
#BSUB -q "debug"
#BSUB -R span[ptile=8]
#BSUB -R affinity[core(2):distribute=balance]
#BSUB -P GFS-T2O
#BSUB -x
#BSUB -a poe

set -x
export OMP_NUM_THREADS=1
export MP_TASK_AFFINITY=core:$OMP_NUM_THREADS
export MP_EUILIB=us
export MP_MPILIB=mpich2
export OMP_STACKSIZE=1G
export MP_STDOUTMODE=unordered
export MP_LABELIO=yes
export MP_TASK_AFFINITY=core
export FOR_DISABLE_STACK_TRACE=true
export decfort_dump_flag=y

set -x

module load ibmpe ics lsf
export MP_COMPILER=intel
export MP_LABELIO=yes

export diffgb=/global/save/Hui-Ya.Chuang/bin/diffgb
export grbtr=/global/save/Hui-Ya.Chuang/bin/grbtr 
# specify user's own post executable for testing
#export POSTGPEXEC=/global/save/Hui-Ya.Chuang/nceppost/trunk/exec/ncep_post
#export POSTGPEXEC=/global/save/Hui-Ya.Chuang/nceppost/trunk/sorc/ncep_post.fd/ncep_post
export POSTGPEXEC=/global/save/Yali.Mao/project/post.trunk.2015.04/exec/ncep_post
#export POSTGPEXEC=/global/save/Hui-Ya.Chuang/nceppost/new-satellites/sorc/ncep_post.fd/ncep_post
# specify PDY (the cycle start yyyymmdd) and cycle
export PDY=201502
export cyc=12
export cycle=t${cyc}z

# specify your running and output directory
export user=`whoami`
export DATA=/ptmpp1/${user}/gfip.working.$PDY

# this script mimics operational GFS post processing production
export MP_LABELIO=yes
# specify your home directory
export homedir=`pwd`/..


# specify the directory environment for executable, it's either para or prod
export envir=prod

rm -rf $DATA; mkdir -p $DATA
cd $DATA
#rm -f ${DATA}/*gfsio*

####################################
# Specify RUN Name and model
####################################
export NET=gfs
export RUN=gfs

####################################
# Determine Job Output Name on System
####################################
#export pgmout="OUTPUT.${pid}"
#export pgmerr=errfile

####################################
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun posts from beginning (default no)
# VERBOSE  - Specify Verbose Output in global_postgp.sh
####################################
export SAVEGES=NO
export SENDSMS=NO
export SENDCOM=YES
export SENDDBN=NO
export RERUN=NO
export VERBOSE=YES

####################################
# Specify Execution Areas
####################################
export GRBINDEX=/nwprod/util/exec/grbindex
                                                                                                         
export HOMEGLOBAL=/nw${envir}/ncep_post.v5.0.4
export EXECGLOBAL=$HOMEGLOBAL/exec
export USHGLOBAL=$HOMEGLOBAL/ush
export FIXGLOBAL=$HOMEGLOBAL/fix
export PARMGLOBAL=$HOMEGLOBAL/parm
        
export HOMEUTIL=/nw${envir}/util
export EXECUTIL=$HOMEUTIL/exec
export FIXUTIL=$HOMEUTIL/fix
export FIXCRTM=/nwprod/lib/crtm/v2.0.6/sorc/fix
        
##############################################
# Define COM directories
##############################################
#export COMIN=/com/${NET}/${envir}/${RUN}.${PDY}
export COMIN=$homedir/data_in
#export COMOUT=/com/${NET}/${envir}/${RUN}.${PDY}
# specify my own COMOUT dir to mimic operations
export COMOUT=/ptmpp1/${user}/gfip.$PDY
mkdir -p $COMOUT

##############################################
# Define GES directories
##############################################
gespath=/ptmp/${user}/GES
export GESdir=$gespath/${RUN}.${PDY}

####################################
# Specify Forecast Hour Range
####################################
export post_times=12
export SHOUR=192
export FHOUR=204
export FHINC=12
export HDMAX=36

####################################
# Specify Special Post Vars
####################################
export IGEN_ANL=81
export IGEN_FCST=96

export POSTGPVARS="KPO=47,PO=1000.,975.,950.,925.,900.,875.,850.,825.,800.,775.,750.,725.,700.,675.,650.,625.,600.,575.,550.,525.,500.,475.,450.,425.,400.,375.,350.,325.,300.,275.,250.,225.,200.,175.,150.,125.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,fileNameAER='testfile'"
#######################################
# Specify Restart File Name to Key Off
#######################################
export restart_file=$COMIN/${RUN}.t${cyc}z.logf
                                                                                                         
####################################
# Specify Timeout Behavior of Post
#
# SLEEP_TIME - Amount of time to wait for
#              a restart file before exiting
# SLEEP_INT  - Amount of time to wait between
#              checking for restart files
####################################
export SLEEP_TIME=900
export SLEEP_INT=5


export ANOMGBEXEC=/nwprod/util/exec/anomgb
export FIXUTIL=/nwprod/util/fix
export COPYGB=/nwprod/util/exec/copygb
#############################################################
# specify new GFS control file that has more FD levels
#export CTLFILE=$homedir/parm/gfs_cntrl.parm

export GRIBVERSION=grib2
if [ $GRIBVERSION = grib1 ]; then
 export IGEN_ANL=81
 export IGEN_FCST=96
 export CTLFILE=${PARMGLOBAL}/gfs_cntrl.parm
elif [ $GRIBVERSION = grib2 ]; then
 export IGEN_ANL="anal_gfs"
 export IGEN_FCST="gfs_avn"
 export POSTAVBLFLD=${PARMGLOBAL}/post_avblflds.xml
 export POSTGRB2TBL=/nwprod/lib/sorc/g2tmpl/params_grib2_tbl_new
 export CTLFILEGFSANL=${PARMGLOBAL}/postcntrl_gfs_anl.xml
 #export CTLFILEGFS=${PARMGLOBAL}/postcntrl_gfs.xml
 export CTLFILEGFS=${PARMGLOBAL}/postcntrl_gfs.xml
 export CTLFILEGOES=${PARMGLOBAL}/postcntrl_gfs_goes.xml
fi

export PARMPOST=${PARMGLOBAL}

# specify .25 latlon grid
export IDRT=0
export res=0p25

if [ $IDRT -eq 0 ] ; then
# 0.125 deg
  if [ $res = "0p125" ] ; then
    export LONB=2880
    export LATB=1441
    export grid='255 0 2880 1441 90000 0 128 -90000 359875 125 125 0'
# 0.25 deg
  elif [ $res = "0p25" ] ; then
    export LONB=1440
    export LATB=721
    export grid='255 0 1440 721 90000 0 128 -90000 359750 250 250 0'
# 0.5 deg
  elif [ $res = "0p50" ] ; then
    export LONB=720
    export LATB=361
    export grid='255 0 720 361 90000 0 128 -90000 359500 500 500 0'
  fi
fi

export POSTGPSH=$HOMEGLOBAL/ush/global_nceppost.sh
#export POSTGPSH=/global/save/Hui-Ya.Chuang/RFC/EXP-gefs/ush/global_nceppost.sh

# execute the script
#export POSTGPSH=$homedir/scripts/global_nceppost.sh
#$homedir/scripts/exgfs_nceppost.sh.ecf
$homedir/scripts/exgfs_nceppost.sh.ecf

#############################################################

ls -l gfs.t${cyc}z.master.grb2f${post_times}
export err=$?
if [ $err = "0" ] ; then

 export filein=gfs.t${cyc}z.master.grbf${post_times}
 export filein2=gfs.t${cyc}z.master.grb2f${post_times}
 # use cmp to see if new pgb files are identical to the control one
 cmp ${filein2} $homedir/data_out/${filein2}

 # if not bit-identical, use diffgb to compare each grib record
 
 export err1=$?
 if [ $err1 -eq 0 ] ; then
  echo " your new post executable generates bit-identical " ${filein2} " as the trunk"
 else 
  echo " your new post executable did not generate bit-identical " ${filein2} " as the trunk"
  echo " start comparing each grib record and write the comparison result to *diff files"
  echo " check these *diff files to make sure your new post only change variables which you intend to change"
  cnvgrib -g21 ${filein2} ${filein}
  # since diffgb does not distinguish time stamp, seperate grib files by time stamp first
  $grbtr ALL $filein ${filein}.'$TR'
  cnvgrib -g21 $homedir/data_out/${filein2} ops.${filein}
  $grbtr ALL ops.${filein} ops.${filein}.'$TR'

  $diffgb -x ops.${filein}.10 \
  ${filein}.10>${filein}.10.diff

  $diffgb -x ops.${filein}.2 \
  ${filein}.2>${filein}.2.diff

  $diffgb -x ops.${filein}.3 \
  ${filein}.3>${filein}.3.diff

  $diffgb -x ops.${filein}.4 \
  ${filein}.4>${filein}.4.diff
 fi
 
 # compare simulated goes files as well
 
 export filein=gfs.t${cyc}z.special.grbf${post_times}
 export filein2=gfs.t${cyc}z.special.grb2f${post_times}

 # use cmp to see if new pgb files are identical to the control one
 cmp ${filein2} $homedir/data_out/${filein2}

 # if not bit-identical, use diffgb to compare each grib record
 
 export err1=$?
 if [ $err1 -eq 0 ] ; then
  echo " your new post executable generates bit-identical " ${filein2} " as the trunk"
 else 
  echo " your new post executable did not generate " ${filein2} " as the trunk"
  echo " start comparing each grib record and write the comparison result to *diff files"
  echo " check these *diff files to make sure your new post only change variables which you intend to change"
  cnvgrib -g21 ${filein2} ${filein}
  # since diffgb does not distinguish time stamp, seperate grib files by time stamp first
  $grbtr ALL $filein ${filein}.'$TR'
  cnvgrib -g21 $homedir/data_out/${filein2} ops.${filein}
  $grbtr ALL ops.$filein ops.${filein}.'$TR'

  $diffgb -x ops.${filein}.10 \
  ${filein}.10>${filein}.10.diff

  $diffgb -x ops.${filein}.2 \
  ${filein}.2>${filein}.2.diff

  $diffgb -x ops.${filein}.3 \
  ${filein}.3>${filein}.3.diff

  $diffgb -x ops.${filein}.4 \
  ${filein}.4>${filein}.4.diff
 fi
 
  
fi 

echo $?
echo "PROGRAM IS COMPLETE!!!!!!"
