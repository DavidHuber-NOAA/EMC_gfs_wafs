#!/bin/sh

set -xa
date

########################################################
# 1) Upload icing and turbulence grib2 data to rzdm ftp server
# 2) Making plots and upload to rzdm www website
#
# critical things:
#
# para: run own job card
# prod: operational products
########################################################
# 1) $HOMEsave/scripts/GCIP_GFIP_GTG_2_rzdm.cron.$MACHINE
# 2) $HOMEsave/scripts/GCIP_GFIP_GTG_2_rzdm.cron
# 3) $HOMEsave/scripts/GCIP_GFIP_GTG_2_rzdm.sh
# 4) bsub < $HOMEsave/wafs_run/run_post_gfs_Grib2.nemsio.driver.$MACHINE
#    !!! needs compiling!!! $HOMEgit/EMC_gtg_ncar
# 5) /gpfs/dell2/emc/modeling/noscrub/Yali.Mao/git/save/grads/plotWafs.sh
#    !!! needs compiling!!! ICSEVconvert=$HOMEgit/verf_g2g.v3.0.12/exec/verf_g2g_icing_convert.$MACHINE

#*******************************************************
# .bashrc was loaded in the driver
if [[ `hostname` =~ ^h ]] ; then
   export RSYNC=echo
   export SSH=echo
else
   export RSYNC=rsync
   export SSH=ssh
fi

if [ $prod = test ] ; then
#   DATA is for running a job card
#   EMC/Developer's parallel
    export DATA=$TMP/fv3_para_working_$cyc
    rm -r $DATA
    mkdir -p $DATA
    cd $DATA

    export DATAROOTplot=$TMP/gfs_${prod}_rzdm_plotting_$cyc

    export remoteData=/home/ftp/emc/unaff/ymao/wafs.$prod/gfs.$PDY
    export remotePlot=/home/www/emc/htdocs/gmb/icao/${prod}_plot
elif [ $prod = prod ] ; then
    cd $TMP

    export DATAROOTplot=$TMP/gfs_${prod}_rzdm_plotting_$cyc

    export remoteData=/home/ftp/emc/unaff/ymao/wafs.$prod/gfs.$PDY
    export remotePlot=/home/www/emc/htdocs/gmb/icao/${prod}_plot

else
#   NCO parallel
    cd $TMP
    export DATAROOTplot=$TMP/gfs_${prod}_rzdm_plotting_$cyc

    export remoteData=/home/ftp/emc/unaff/ymao/wafs.$prod/gfs.$PDY
    export remotePlot=/home/www/emc/htdocs/gmb/icao/${prod}_plot

fi

rm -r $DATAROOTplot

# Use MPMD to speed up the processing
rm gfipgcipgtg2rzdm.cmdfile

# otherwise there are error message on Theia: 
# libgomp: Thread creation failed: Resource temporarily unavailable
fhours="003 006 009 012 015 018 021 024 027 030 033 036 000"
# 000 and 003 needs more time than others because of GCIP.
# Put 000 at the last of the list to be 'waited'
i=0
for fh in $fhours ; do
  echo $i $HOMEsave/scripts/GCIP_GFIP_GTG_2_rzdm.sh $fh >> gfipgcipgtg2rzdm.cmdfile
  i=$(( i + 1 ))
done
if [ ! `echo $MPIRUN | cut -d " " -f1` = 'srun' ] ; then
    # If not 'srun' MPMD, do not need CPU number at the beginning of each line of gfipgcipgtg2rzdm.cmdfile
    sed 's/[^ ]* //'  -i gfipgcipgtg2rzdm.cmdfile
    export MP_PGMMODEL=mpmd
    MPMDRUN=$MPIRUN
else
    MPMDRUN="$MPIRUN -l --multi-prog"
fi
$MPMDRUN gfipgcipgtg2rzdm.cmdfile

sleep 30 # 000 and 003 might be finished in  seconds apart

########################################################
####        cleanup grib data and plottings if      ####
####        older than 'endDate', keep up to 3 days ####
########################################################                                                                                                             
dates=$PDY
dates="$dates `$NDATE -1 ${PDY}00 | cut -c1-8`"
echo "cyc=$cyc"
if [[ $cyc <  18 ]] ; then
    dates="$dates `$NDATE -25 ${PDY}00 | cut -c1-8`"
fi

if [[ `hostname` =~ ^h ]] ; then
  echo $PDY $cyc $dates > $TMP/GCIP_GFIP_GTG_2_rzdm.list
else
  if  [ $prod = prod ] ; then
    ssh ymao@emcrzdm "ksh ~/scripts/wafs_web.ftp_maintenance.sh $prod $cyc $dates"
  elif  [ $prod = para ] ; then
    ssh ymao@emcrzdm "ksh ~/scripts/wafs_web.ftp_maintenance.sh $prod $cyc $dates"
  fi
fi
date
