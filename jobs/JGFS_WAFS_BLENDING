#!/bin/sh
########################################################
# This job runs the code to blend US's and UK's WAFS products 
########################################################

set -x

######################################################
# The following two variable could be defined in the 
# loadleveler submission script (the ecf script), if 
# not they will take the default values which is set 
# for the NCO running enviroment
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-prod}
if [ $envir = "prod" ]
then
   export SENDDBN=YES
   export SENDDBN_GB2=YES
   export DBN_ALERT_TYPE=GFS_WAFSA_GB2
   export wgrib2=${wgrib2:-/nwprod/util/exec/wgrib2}
else
   export SENDDBN=NO
   export SENDDBN_GB2=NO
   export SENDDBN_GB2_PARA=NO
   export DBN_ALERT_TYPE_PARA=GFS_WAFSA_GB2_PARA 
   export DBN_ALERT_TYPE=GFS_WAFSA_GB2_PARA 
   export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
   export NET=gfs
   export RUN=gfs
   export wgrib2=${wgrib2:-/nwprod/util/exec/wgrib2}
   export SENDDBN_NTC=NO
   export RUN_PLOT=NO
fi

# #### 08/25/1999 ###################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

##########################################################
# obtain unique process id (pid) and make temp directories
#   ($DATA may be preset for developer runs)
##########################################################
export pid=$$
export DATA_IN=${DATA_IN:-/tmpnwprd}
export DATA=${DATA:-$DATA_IN/${job}.${pid}}
[ -d $DATA ] && rm -rf $DATA
mkdir -p $DATA
cd $DATA

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z 

######################
# Set NET and RUN
######################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}

################################################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC, set to NO for testing
################################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}  # need to set to NO for testing
export SENDDBN_GB2=${SENDDBN_GB2:-YES}  # need to set to NO for testing
export SENDDBN_GB2_PARA=${SENDDBN_GB2_PARA:-NO}  # for PARA only, need to set to NO for prod
export SENDDBN_NTC=${SENDDBN_NTC:-YES}  # need to set to NO for testing
export SENDECF=${SENDECF:-YES}
export RERUN=${RERUN:-NO}

# Specify Execution Areas
export HOMEGLOBAL=${HOMEGLOBAL:-/nwprod/gfs_wafs.${gfs_wafs_version}}
export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix}
export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}
export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}

export HOMEgfs=${HOMEgfs:-"/nw${envir}/gfs_wafs.${gfs_wafs_version}"}
export EXECgfs=${EXECgfs:-$HOMEgfs/exec}
export FIXgfs=${FIXgfs:-$HOMEgfs/fix}
export PARMgfs=${PARMgfs:-$HOMEgfs/parm}
export USHgfs=${USHgfs:-$HOMEgfs/ush}

# New set of parm files for AWIPS products
export PARMutil=$HOMEgfs/parm

################################################
# Define the location of codes and scripts
################################################
###################################
# Set up the UTILITIES
###################################
export HOMEutil=${HOMEutil:-/nwprod/util}
export utilscript=${utilscript:-/nwprod/util/ush}
export utilexec=${utilexec:-/nwprod/util/exec}

####################################################
# Run the setup to obtain utilities such as err_chk
####################################################
$utilscript/setup.sh

###########################################
# Run setpdy and initialize PDY variables
###########################################
$utilscript/setpdy.sh
. $DATA/PDY

#################################################
# Set up the INPUT and OUTPUT directories
#################################################
export COMIN_US=${COMIN_US:-/pcom/wafs}
export COMIN_UK=${COMIN_UK:-/dcom/us007003/$PDY/wgrbbul/ukmet_wafs}
export COM_IN=${COM_IN:-/com/${NET}/prod}

export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}
export COMOUT=${COMOUT:-$COM_OUT/${RUN}.${PDY}}
if [ $envir = "prod" ]
then
  export pcom=${pcom:-/pcom/wafs}
else
  export pcom=${pcom:-/pcom/${envir}/wafs}
fi

mkdir -p $COMOUT $pcom

##############################################
# Set up the forecast hours
##############################################
export SHOUR=06
export EHOUR=36

export FHINC=03

###############################################
# Specify Timeout Behavior of WAFS blending
#
# SLEEP_TIME - Amount of time to wait for
#              a input file before exiting
# SLEEP_INT  - Amount of time to wait between
#              checking for input files
###############################################
# export SLEEP_TIME=300   # changed to 60 to avoid hitting wall_clock when miss umket wafs files ... 
export SLEEP_TIME=60
export SLEEP_INT=10

####################################
# Check if this is a restart
####################################
if test -f $COMOUT/$RUN.t${cyc}z.control.wafsblending
then
  modelrecvy=`cat < $COMOUT/${RUN}.t${cyc}z.control.wafsblending`
  recvy_pdy=`echo $modelrecvy | cut -c1-8`
  recvy_cyc=`echo $modelrecvy | cut -c9-10`
  recvy_shour=`echo $modelrecvy | cut -c11-`

  if test $RERUN = "NO"
  then
    if [ $recvy_shour -lt $EHOUR ]
    then
      NEW_SHOUR=`expr $recvy_shour + $FHINC`
    fi
    if test $NEW_SHOUR -ge $SHOUR
    then
      export SHOUR=$NEW_SHOUR
      if [ $SHOUR -lt 10 ]; then SHOUR=0$SHOUR; fi
    fi
    if test $recvy_shour -ge $EHOUR
    then
      msg="WAFS blending Already Completed to $EHOUR"
      postmsg "$jlogfile" "$msg"
    else
      msg="Starting: PDY=$PDY cycle=t${recvy_cyc}z SHOUR=$SHOUR      ."
      postmsg "$jlogfile" "$msg"
    fi
  fi
fi

env

######################
# Execute the script.
######################
$HOMEGLOBAL/scripts/exwafs_blending.sh.ecf

###############################################
# This part is for developers usage only 
# It is turned off for operational run
###############################################
if [ $RUN_ENVIR != prod -a $RUN_PLOT = YES ]
then
  /global/save/Hui-Ya.Chuang/WAFC/scripts/plot_wafs.sh $PDY $cyc
fi

cat $pgmout

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

if [ $envir = "prod" ]
then
cd $DATA_IN
rm -rf $DATA
fi
date
