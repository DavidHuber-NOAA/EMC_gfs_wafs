#!/bin/sh

########################################
# GFS AWIPS PRODUCT GENERATION
########################################

set -xa
# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

# 
# obtain unique process id (pid) and make temp directories
#   ($DATA may be preset for developer runs)
#
export pid=$$
export DATA=${DATA:-/tmpnwprd/$job.$pid}
[ -d $DATA ] && rm -rf $DATA
mkdir $DATA
cd $DATA 

####################################
# File To Log Msgs
####################################
if [ ${envir} = "prod" ]; then
  export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}
else
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
fi

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z 

############################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC
# GET_IOPROFILE - Run I/O statistics
############################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
if [ $envir = "prod" ]
then
  export SENDDBN=YES
  export SENDDBN_GB2=YES
  export SENDDAS1=YES
else
  export SENDDBN=NO
  export SENDDBN_GB2=NO
  export SENDDAS1=NO
fi
export GET_IOPROFILE=${GET_IOPROFILE:-NO}
#################################
# Set up the NET and RUN
#################################
export NET=gfs
export RUN=gfs
export model=gfs

################################
# Set up the HOME directory
################################
export HOMEgfs=${HOMEgfs:-"/nw${envir}/gfs_wafs.${gfs_wafs_version}"}
export EXECgfs=$HOMEgfs/exec
export FIXgfs=$HOMEgfs/fix
export PARMgfs=$HOMEgfs/parm
export USHgfs=$HOMEgfs/ush
export SCRIPTSgfs=$HOMEgfs/scripts

###################################
# Set up the UTILITIES
###################################
export utilscript=/nwprod/util/ush
export EXECutil=/nwprod/util/exec
HOMEutil=${HOMEutil:-/nwprod/util}
#export EXECutil=$HOMEutil/exec
export FIXutil=$HOMEutil/fix
export PARMutil=$HOMEutil/parm
export USHutil=$HOMEutil/ush


###################################
# Run the setup script
###################################
$utilscript/setup.sh
# Run setpdy and initialize PDY variables
$utilscript/setpdy.sh
. ./PDY

########################################
# Set up the input/output directory
########################################
if [ $envir = "prod" ] || [ $envir = "para" ]
then
  export com=/com/${NET}/${envir}
  export COMIN=/com/${NET}/${envir}/${RUN}.${PDY}
else
  export com=/com/${NET}/prod
  export COMIN=/com/${NET}/prod/${RUN}.${PDY}
fi
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}
export COMOUT=${COMOUT:-$COM_OUT/${RUN}.${PDY}}
if [ $envir = "prod" ]
then
  export pcom=${pcom:-/pcom/gfs}
else
  export pcom=${pcom:-/pcom/${envir}/gfs}
fi
mkdir -p $COMOUT $pcom
 
env

########################################################
# Execute the script.
if [ $GET_IOPROFILE = YES ]; then
   /usrx/local/mio/tools/bin/miostats -X0 \
   ${SCRIPTSgfs}/exgfs_grib_wafs.sh.ecf $fcsthrs
else
   ${SCRIPTSgfs}/exgfs_grib_wafs.sh.ecf $fcsthrs
fi
########################################################

##################################################
# save the profiling data captured from miostats
##################################################
if [ $GET_IOPROFILE = YES ]; then
    . /com/miostats/.set_IOprofile
fi

if [ $envir = "prod" ]
then
cd /tmpnwprd
rm -rf $DATA
fi
date
