#!/bin/sh

########################################
# GFS AWIPS PRODUCT GENERATION
########################################

set -xa
# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

# 
# obtain unique process id (pid) and make temp directories
#   ($DATA may be preset for developer runs)
#
export pid=$$
export DATA=${DATA:-/tmpnwprd1/$job.$pid}
[ -d $DATA ] && rm -rf $DATA
mkdir $DATA
cd $DATA 

####################################
# File To Log Msgs
####################################
if [ ${envir} != "prod" ]; then
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
  export DBNROOT=/nwprod/spa_util/fakedbn
fi

export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}
####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z 

############################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC
# GET_IOPROFILE - Run I/O statistics
############################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDDBN_GB2=${SENDDBN_GB2:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-YES}

#################################
# Set up the NET and RUN
#################################
export NET=gfs
export RUN=gfs
export model=gfs

################################
# Set up the HOME directory
################################
export HOMEgfs=${HOMEgfs:-/nw${envir}/gfs_wafs.${model_ver}}
export EXECgfs=${EXECgfs:-$HOMEgfs/exec}
export FIXgfs=${FIXgfs:-$HOMEgfs/fix}
export PARMgfs=${PARMgfs:-$HOMEgfs/parm}
export USHgfs=${USHgfs:-$HOMEgfs/ush}
export SCRIPTSgfs=${SCRIPTSgfs:-$HOMEgfs/scripts}

###################################
# Set up the UTILITIES
###################################
export HOMEutil=${HOMEutil:-/nw${envir}/util.${util_ver}}
export utilscript=${utilscript:-$HOMEutil/ush}
export EXECutil=${EXECutil:$HOMEutil/exec}
export FIXutil=${FIXutil:-$HOMEutil/fix}
export PARMutil=${PARMutil:-$HOMEutil/parm}
export USHutil=${USHutil:-$HOMEutil/ush}


###################################
# Run the setup script
###################################
$utilscript/setup.sh
# Run setpdy and initialize PDY variables
$utilscript/setpdy.sh
. ./PDY

########################################
# Set up the input/output directory
########################################
if [ $envir = "prod" ] || [ $envir = "para" ]
then
  export com=/com/${NET}/${envir}
  export COMIN=/com/${NET}/${envir}/${RUN}.${PDY}
else
  export com=/com/${NET}/prod
  export COMIN=/com/${NET}/prod/${RUN}.${PDY}
fi
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}
export COMOUT=${COMOUT:-$COM_OUT/${RUN}.${PDY}}
if [ $envir = "prod" ]
then
  export pcom=${pcom:-/pcom/gfs}
else
  export pcom=${pcom:-/pcom/${envir}/gfs}
fi
mkdir -p $COMOUT $pcom
 
env

########################################################
# Execute the script.
${SCRIPTSgfs}/exgfs_grib_wafs.sh.ecf $fcsthrs
########################################################

if [ $envir = "prod" ]
then
cd /tmpnwprd1
rm -rf $DATA
fi
date
