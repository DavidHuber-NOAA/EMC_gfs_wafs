# makefile for FIP
#----------------------------------------
FC = ifort
INC = /apps/contrib/NCEPLIBS/orion/include/g2_v3.2.0_4

### For whoever wants to use the code, change LIBS according to different machine.
LIBS = /apps/contrib/NCEPLIBS/orion/lib/libw3nco_v2.1.0_4.a /apps/contrib/NCEPLIBS/orion/lib/libw3emc_v2.5.0_4.a /apps/contrib/NCEPLIBS/orion/lib/libip_v3.1.0_4.a /apps/contrib/NCEPLIBS/orion/lib/libbacio_v2.2.0_4.a /apps/contrib/NCEPLIBS/orion/lib/libsp_v2.1.0_4.a
#LIBS = -L /nwprod/lib -lw3nco_4 -lw3emc_4 -lip_4 -lbacio_4 -lsp_4
FFLAGS = -O  -I$(INC)

#----------------------------------------
# Clear out all suffixes
.SUFFIXES:
# list what we use
.SUFFIXES: .f90 .o
# defines a suffix rule for .f90 -> .o
.f90.o :
	$(FC) $(FFLAGS) -c -C $<

#----------------------------------------
# Macros
# Can Not Dynamically Reset Macros
# The last macro declaration defines the overall macro definition to be used everywhere.
# It's discouraged to use globbing (*, ?). It works for GNU make, but not for the Cray or IBM SP.
PROG = degrib1
SRCS = degrib1.f90

# To substitute ".f90" with ".o" in the list given by $(SRCS)
OBJS = $(SRCS:.f90=.o)
MODS = `echo $(SRCS:.f90=.mod)|tr A-Z a-z`

#----------------------------------------
# default target by convention is ``all''
all : $(PROG)
$(PROG) : $(OBJS)
	$(FC) $? $(LIBS) -o $(PROG)
$(OBJS) :

#
# @ tells not to echo the command to stdout. 
# Echoing can be disabled globally with either the ``-s'' option or the fake target .SILENT. 
clean:
	@echo "rm -f $(OBJS) $(MODS)"
	@rm -f $(OBJS) $(MODS)
	@rm -f main.mod

